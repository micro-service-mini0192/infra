user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    # upstream 블록에서 백엔드 서버들 설정 (컨테이너 이름 사용)
    upstream backend {
        server server1:80;  # Docker 컨테이너 이름을 사용
        server server2:80;  # Docker 컨테이너 이름을 사용
    }

    server {
        listen 80;

        location / {
            proxy_pass http://backend;  # 'backend'는 upstream 블록에서 정의한 이름
            proxy_set_header Host $host;
            proxy_set_header Connection "";
            proxy_set_header X-Real-IP $remote_addr;  # 클라이언트 IP를 전달
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # X-Forwarded-For 헤더 추가
            proxy_set_header X-Forwarded-Proto $scheme;  # HTTPS/HTTP 구분을 위한 헤더 추가
        }
    }

    # MIME 타입 설정
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 로그 설정
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # 파일 송신 및 타임아웃 설정
    sendfile on;
    keepalive_timeout 65;

    # 추가 설정 파일 포함
    include /etc/nginx/conf.d/*.conf;
}
